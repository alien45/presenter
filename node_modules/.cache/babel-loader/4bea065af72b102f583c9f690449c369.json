{"ast":null,"code":"var _jsxFileName = \"/home/toufiq/go/src/github.com/play-around/presenter/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport client from './client';\nimport './App.css';\nconst DO_PRESENT = getUrlParam('present').toLowerCase() === 'yes';\nexport default function App() {\n  const [password, setPassword] = useState(localStorage.getItem('password'));\n  const [slideIndex, setSlideIndex] = useState(1);\n  const [slides, setSlides] = useState([]); // slide names\n\n  const [isPresenter, setIsPresenter] = useState(null); // not logged in yet\n\n  const handleKeyPress = e => {\n    // control slide on arrow key press and page up/down key press\n    e = e || window.event;\n    let index = slideIndex;\n\n    switch (e.keyCode) {\n      case 35:\n        // End key\n        // go to last slide\n        break;\n\n      case 36:\n        // Home key\n        index = 0; // go to first slide\n\n        break;\n\n      case 38: // up arrow\n\n      case 37:\n        // left arrow\n        index = slideIndex - 1; // go to previous slide\n\n        break;\n\n      case 39: // right arrow\n\n      case 40:\n        // down arrow\n        index = slideIndex + 1; // go to next slide\n\n        break;\n\n      default:\n        // console.log({ keyCode: e.keyCode })\n        break;\n    }\n\n    if (index < 0 || index >= slides.length) return;\n    setSlideIndex(index);\n    client.setCurrentSlide(index, () => {});\n  };\n\n  useEffect(() => {\n    client.onSlideIndex(index => setSlideIndex(index));\n    return () => {};\n  }, [slideIndex]);\n\n  if (DO_PRESENT && isPresenter === null) {\n    const handleLogin = () => client.login(password, (admin, slides) => {\n      setSlides(slides);\n      if (!admin || !!document.onkeydown) return;\n      document.onkeydown = handleKeyPress; // // auto relogin\n      // client.reconnect(() => handleLogin())\n    });\n\n    if (!password) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }\n    }, \"Please enter password to login\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      onChange: console.log,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 6\n      }\n    })));\n    handleLogin();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", Object.assign({\n    src: `./slides/${slideIndex}.png`,\n    style: {\n      width: '100%'\n    },\n    alt: ''\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }\n  })));\n} // getUrlParam reads the URL parameters\n//\n// Params:\n// @name    string: (optional) if supplied will return a specific paramenter as string.\n//                  Otherwise, will return an object containing all the URL parameters with respective values.\n//\n// returns  string/object\n\nfunction getUrlParam(name) {\n  const params = {};\n  const regex = /[?&]+([^=&]+)=([^&]*)/gi;\n  window.location.href.replace(regex, (_, key, value) => params[key] = value);\n  return name ? params[name] || '' : params;\n}","map":{"version":3,"sources":["/home/toufiq/go/src/github.com/play-around/presenter/src/App.js"],"names":["React","useState","useEffect","client","DO_PRESENT","getUrlParam","toLowerCase","App","password","setPassword","localStorage","getItem","slideIndex","setSlideIndex","slides","setSlides","isPresenter","setIsPresenter","handleKeyPress","e","window","event","index","keyCode","length","setCurrentSlide","onSlideIndex","handleLogin","login","admin","document","onkeydown","console","log","src","style","width","alt","name","params","regex","location","href","replace","_","key","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport client from './client'\nimport './App.css'\n\nconst DO_PRESENT = getUrlParam('present').toLowerCase() === 'yes'\nexport default function App() {\n\tconst [password, setPassword] = useState(localStorage.getItem('password'))\n\tconst [slideIndex, setSlideIndex] = useState(1)\n\tconst [slides, setSlides] = useState([]) // slide names\n\tconst [isPresenter, setIsPresenter] = useState(null) // not logged in yet\n\tconst handleKeyPress = e => {\n\t\t// control slide on arrow key press and page up/down key press\n\t\te = e || window.event;\n\t\tlet index = slideIndex\n\t\tswitch (e.keyCode) {\n\t\t\tcase 35: // End key\n\t\t\t\t// go to last slide\n\t\t\t\tbreak\n\t\t\tcase 36: // Home key\n\t\t\t\tindex = 0 // go to first slide\n\t\t\t\tbreak\n\t\t\tcase 38: // up arrow\n\t\t\tcase 37: // left arrow\n\t\t\t\tindex = slideIndex - 1 // go to previous slide\n\t\t\t\tbreak\n\t\t\tcase 39: // right arrow\n\t\t\tcase 40: // down arrow\n\t\t\t\tindex = slideIndex + 1 // go to next slide\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\t// console.log({ keyCode: e.keyCode })\n\t\t\t\tbreak\n\t\t}\n\t\tif (index < 0 || index >= slides.length) return\n\t\tsetSlideIndex(index)\n\t\tclient.setCurrentSlide(index, () => { })\n\t}\n\n\tuseEffect(() => {\n\t\tclient.onSlideIndex(index => setSlideIndex(index))\n\n\t\treturn () => { }\n\t}, [slideIndex])\n\n\tif (DO_PRESENT && isPresenter === null) {\n\t\tconst handleLogin = () => client.login(password, (admin, slides) => {\n\t\t\tsetSlides(slides)\n\t\t\tif (!admin || !!document.onkeydown) return\n\t\t\tdocument.onkeydown = handleKeyPress\n\t\t\t// // auto relogin\n\t\t\t// client.reconnect(() => handleLogin())\n\t\t})\n\t\tif (!password) return (\n\t\t\t<div>\n\t\t\t\t<h3>Please enter password to login</h3>\n\t\t\t\t<form onSubmit={handleLogin}>\n\t\t\t\t\t<input type='password' onChange={console.log} />\n\t\t\t\t</form>\n\n\t\t\t</div>\n\t\t)\n\t\thandleLogin()\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<img {...{\n\t\t\t\tsrc: `./slides/${slideIndex}.png`,\n\t\t\t\tstyle: { width: '100%' },\n\t\t\t\talt: '',\n\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\n// getUrlParam reads the URL parameters\n//\n// Params:\n// @name    string: (optional) if supplied will return a specific paramenter as string.\n//                  Otherwise, will return an object containing all the URL parameters with respective values.\n//\n// returns  string/object\nfunction getUrlParam(name) {\n\tconst params = {}\n\tconst regex = /[?&]+([^=&]+)=([^&]*)/gi\n\twindow.location.href.replace(regex, (_, key, value) => params[key] = value)\n\treturn name ? params[name] || '' : params\n}"]},"metadata":{},"sourceType":"module"}